# This is an example on how to run CSMM with Docker compose.
# This is **not** a production ready deployment template, you must configure a web server, security, ... yourself
version: "3.7"

services:
  csmm-web:
    build: .
    #image: catalysm/csmm
    depends_on:
      - cache
      - db
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    ports:
      - 127.0.0.1:${CSMM_PORT}:1337
    restart: unless-stopped
    entrypoint: ["npm", "run", "start:app"]

  csmm-worker:
    build: .
    #image: catalysm/csmm
    depends_on:
      - cache
      - db
    env_file: .env
    environment:
      NODE_ENV: ${NODE_ENV:-development}
    healthcheck:
      disable: true
    restart: unless-stopped
    entrypoint: ["npm", "run", "start:worker"]

  cache:
    image: redis
    volumes:
      - ./redis-data:/data
    command: ["redis-server", "--appendonly", "yes"]
    restart: unless-stopped

  db:
    image: mariadb
    volumes:
      - ./db-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: "true"
    restart: unless-stopped
