name: Node.js CI

on: [pull_request]

jobs:
  node-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: csmm
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run lint -- --format junit -o reports/lint/js-lint-results.xml
      - run: npm run cover
        env:
          DBSTRING: mysql2://root@127.0.0.1:3306/csmm
          REDISSTRING: redis://127.0.0.1:6379
          CSMM_LOGLEVEL: debug
      - name: Test & publish code coverage
        if: ${{ always() }}
        uses: codecov/codecov-action@v1
        with:
          file: ./reports/coverage/lcov.info
