<%- exposeLocalsToBrowser() %>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#player-give-item-modal">
  Give item(s)
</button>

<!-- Modal -->
<div class="modal fade" id="player-give-item-modal" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">
          Give item(s) to
          <%= player.name %>
        </h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="player-give-item-form">
          <div class="form-group">

            <label class="sr-only" for="player-give-item-input-amount">Amount</label>
            <input type="text" class="form-control mb-2 mr-sm-2" id="player-give-item-input-amount"
              placeholder="Amount">
          </div>

          <label class="sr-only" for="player-give-item-input-itemName">Item Name</label>
          <div class="input-group mb-2 mr-sm-2">
            <input type="text" class="form-control" id="player-give-item-input-itemName" placeholder="Item Name">
          </div>

          <label class="sr-only" for="player-give-item-input-quality">Quality</label>
          <div class="input-group mb-2 mr-sm-2">
            <input type="text" class="form-control" id="player-give-item-input-quality" placeholder="Quality">
          </div>
          <div><small>For items that do not support quality, use '0'.</small></div>

          <input type="submit" class="btn btn-primary" data-dismiss="modal" aria-hidden="true"
            id="player-give-item-submit">

        </form>

        <div>
          Possible items: (click to autofill) <br>
          <small id='player-give-item-possible-items'></small>
        </div>
      </div>


      <div class="modal-footer">
        <small>Share the wealth </small>
      </div>
    </div>
  </div>
</div>


<script>
  $(document).ready(function () {

    let availableItems = [];

    $.ajax({
      url: `/api/sdtdserver/availableitems`,
      data: {
        serverId: <%= server.id %>,
        item: "*",
      },
      success: (data, status, xhr) => {
        availableItems = data;
      },
      error: function (xhr, status, error) {
        displayAjaxToSupportData(xhr, this);;
        showErrorModal(`${error} - ${xhr.responseText}`, xhr);
      }
    });

    $("#player-give-item-input-itemName").on('keyup', (e) => {
      let subString = $("#player-give-item-input-itemName").val().toLowerCase();
      let possibleItems = availableItems.filter(item => item.toLowerCase().includes(subString));
      $("#player-give-item-possible-items").empty();
      possibleItems.forEach(item => {
        $("#player-give-item-possible-items").append(`<span class="itemName">${item} </span>`);
      })
    });

    $("#player-give-item-possible-items").on('click', ".itemName", (e) => {
      $("#player-give-item-input-itemName").val(e.target.textContent.trim());
    })


    $('#player-give-item-submit').click((event) => {
      event.preventDefault();
      let amount = $('#player-give-item-input-amount').val()
      let itemName = $('#player-give-item-input-itemName').val()
      let quality = parseInt($('#player-give-item-input-quality').val(), 10)

      if (!(amount == '')) {
        if (isNaN(quality)) {
          return alert('Please provide a valid value for quality (number)')
        }
      }

      if (amount == '' || isNaN(amount)) {
        return alert('Please provide a valid value for amount (number)')
      }

      if (itemName == '') {
        return alert('Please provide an item name')
      }

      $.ajax({
        url: `/api/player/giveitem`,
        type: "POST",
        data: {
          _csrf: window.SAILS_LOCALS._csrf,
          playerId: <%= player.id %>,
          itemName: itemName,
          amount: amount,
          quality: quality
        },
        success: (data, status, xhr) => {
          alert('Gave items to player');
        },
        error: function (xhr, status, error) {
          displayAjaxToSupportData(xhr, this);
          showErrorModal(`${error} - ${xhr.responseText}`, xhr);
        }
      });
    })



  })

</script>