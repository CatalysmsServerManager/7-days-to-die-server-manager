<!DOCTYPE html>
<html>

<head>
  <title>CSMM</title>


  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <meta name="description" content="A 7 days to die server manager">
  <meta name="author" content="Catalysm">

  <link href="https://fonts.googleapis.com/css?family=Lato:300,400,700,300italic,400italic,700italic" rel="stylesheet"
    type="text/css">
  <link rel="icon" href="/favicon.ico?version=2" type="image/png">

  <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

  <!--STYLES-->
  <%- stylesheetTag('/dependencies/bootstrap/css/bootstrap-grid.css') %>
  <%- stylesheetTag('/dependencies/bootstrap/css/bootstrap-grid.min.css') %>
  <%- stylesheetTag('/dependencies/bootstrap/css/bootstrap-reboot.css') %>
  <%- stylesheetTag('/dependencies/bootstrap/css/bootstrap-reboot.min.css') %>
  <%- stylesheetTag('/dependencies/bootstrap/css/bootstrap.css') %>
  <%- stylesheetTag('/dependencies/bootstrap/css/bootstrap.min.css') %>
  <%- stylesheetTag('/dependencies/sb-admin/sb-admin.css') %>
  <%- stylesheetTag('/styles/app.css') %>
  <%- stylesheetTag('/styles/flags/flags.css') %>
  <%- stylesheetTag('/styles/flags/flags.min.css') %>
  <%- stylesheetTag('/styles/importer.css') %>
  <%- stylesheetTag('/styles/landing-page.css') %>
  <%- stylesheetTag('/styles/sdtd/chat.css') %>
  <%- stylesheetTag('/styles/sdtd/console.css') %>
  <%- stylesheetTag('/styles/sdtd/gblComment.css') %>
  <%- stylesheetTag('/styles/sdtd/tickets.css') %>
  <!--STYLES END-->

  <!-- Datatables -->
  <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.16/b-1.5.1/b-html5-1.5.1/b-print-1.5.1/fc-3.2.4/fh-3.1.3/r-2.2.1/datatables.min.css" />

  <!-- Leaflet -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
    crossorigin="" />

  <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->


  <!--TEMPLATES-->
  
  <!--TEMPLATES END-->


  <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


  <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
  <!-- Moment.js -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.min.js" integrity="sha256-L3S3EDEk31HcLA5C6T2ovHvOcD80+fgqaCDt2BAi92o="
    crossorigin="anonymous"></script>

  <!-- Chart.js -->
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.bundle.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.2/Chart.js"></script>


  <!-- Font awesome 5 -->
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" integrity="sha384-DNOHZ68U8hZfKXOrtjWvjxusGo9WQnrNx2sqG0tfsghAvtVlRW3tvkXWZh58N9jp"
    crossorigin="anonymous">

  <!--SCRIPTS-->
  <%- scriptTag('/dependencies/sails.io.js') %>
  <%- scriptTag('/dependencies/jquery-3.2.1.js') %>
  <%- scriptTag('/dependencies/jquery-3.2.1.min.js') %>
  <%- scriptTag('/dependencies/bootstrap/js/bootstrap.bundle.js') %>
  <%- scriptTag('/dependencies/bootstrap/js/bootstrap.bundle.min.js') %>
  <%- scriptTag('/dependencies/bootstrap/js/bootstrap.js') %>
  <%- scriptTag('/dependencies/bootstrap/js/bootstrap.min.js') %>
  <%- scriptTag('/dependencies/jquery-easing/jquery.easing.compatibility.js') %>
  <%- scriptTag('/dependencies/jquery-easing/jquery.easing.js') %>
  <%- scriptTag('/dependencies/jquery-easing/jquery.easing.min.js') %>
  <%- scriptTag('/dependencies/lodash.js') %>
  <%- scriptTag('/dependencies/sb-admin/sb-admin.js') %>
  <%- scriptTag('/dependencies/validator.js') %>
  <%- scriptTag('/js/app.js') %>
  <%- scriptTag('/js/gbl/gblComments.js') %>
  <%- scriptTag('/js/sdtdServer/chat.js') %>
  <%- scriptTag('/js/sdtdServer/console.js') %>
  <%- scriptTag('/js/sdtdServer/map.js') %>
  <!--SCRIPTS END-->



  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
  <script type="text/javascript" src="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.16/b-1.5.1/b-html5-1.5.1/b-print-1.5.1/fc-3.2.4/fh-3.1.3/r-2.2.1/datatables.min.js"></script>

  <!-- Leaflet -->
  <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw=="
    crossorigin=""></script>

  <!-- DateTimePicker -->
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

  <!-- Bootstrap Slider -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/10.0.2/bootstrap-slider.min.js" integrity="sha256-VYMMGFCEeBYop7KDzrlj8Bf6R4rhv0XxdH/ctYViebc="
    crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/10.0.2/css/bootstrap-slider.min.css"
    integrity="sha256-GwA8DO9HkVp1kdrzQyoT/zi9qZDV/902GSxlrGOfjo8=" crossorigin="anonymous" />


</head>

<body class="sidenav-toggled">


  <%- await include("../includes/applicationNav.sejs") %>




  <div class="content-wrapper" style="margin-top: 3%;">
    <div id="alert-socket-disconnect" class="alert alert-warning" role="alert">
      <strong>Warning: lost connection. Please try refreshing this page or check your internet connection.</strong>
    </div>

    <div class="container-fluid">

      <%- body %>

    </div>
  </div>

  <div id="error-modal" class="modal fade">
      <div class="modal-dialog modal-confirm">
        <div class="modal-content">
          <div class="modal-header">
            <div class="icon-box">
              <i class="fas fa-exclamation-circle"></i>
            </div>
            <h4 class="text-light">ERROR ! </h4>
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          </div>
          <div class="modal-body text-center">
            <div class="container-fluid">
              Something went horribly wrong! Just kidding, it's probably not that bad. <span id="error-modal-message-bool">Here's
                the error message: </span>

              <br>

              <div id="error-modal-message" class="font-weight-bold"></div>

              <br>

              <a href="http://catalysm.net/discord" target="_blank"><i class="fab fa-discord"></i> Join our Discord for
                support.</a>

              <br>

              <small class="text-muted">Pssst, there might be an error message in the console you can send us!</small>
            </div>
          </div>
        </div>
      </div>
    </div>

</body>


<script>
  $(document).ready(() => {
    $("#alert-socket-disconnect").hide();

    io.socket.on('disconnect', (err) => {
      console.log(`Socket disconnected - ${err}`);
      setTimeout(() => {
        $("#alert-socket-disconnect").show();
      }, 10000)
    });

    io.socket.on('connect', (err) => {
      setTimeout(() => {
        $("#alert-socket-disconnect").hide();
      }, 10000)

    });

  })

</script>


</html>
